<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="daycare.demo.daycare.dao.MainMapper">

    <insert id="signupInsertRow"
            parameterType ="userRequestDTO">
        insert into USER(ID, PASSWORD, NAME, EMAIL, PHONE)
        values(#{id}, #{pwd}, #{name}, #{email}, #{phone})
    </insert>

    <select id="idCheckSelectRow" 
            parameterType="map" 
            resultType="Integer">
        SELECT COUNT(*)
        FROM USER
        WHERE ID = #{id}
    </select>

    <select id="loginSelectRow" 
            parameterType="map" 
            resultType="Integer">
        SELECT COUNT(*)
        FROM USER
        WHERE ID = #{id} AND PASSWORD = #{pwd}
    </select>

    <select id="userSelectRow" 
            parameterType="String" 
            resultType="userResponseDTO">
        SELECT 
        UID as uid,
        ID as id,
        NAME as name,
        EMAIL as email,
        PHONE as phone
        FROM USER
        WHERE ID = #{id}
    </select>

    <select id="userSelectRow_2" 
            parameterType="Integer" 
            resultType="userResponseDTO">
        SELECT 
        UID as uid,
        ID as id,
        NAME as name,
        EMAIL as email,
        PHONE as phone
        FROM USER
        WHERE UID = #{uid}
    </select>

    <insert id="reviewInsertRow"
            parameterType ="reviewRequestDTO">
        insert into DAYCARE_REVIEW(DAYCARE_ID, RATING, DATE, CONTENT, UID)
        values(#{daycareId}, #{rating}, #{date}, #{content}, #{uid})
    </insert>

    <select id="reviewSelectRow" 
        parameterType="String" 
        resultType="reviewResponseDTO">
        SELECT 
            REVIEW_ID, RATING, DATE, CONTENT, UID
        FROM 
            DAYCARE_REVIEW
        WHERE 
            DAYCARE_ID = #{daycareId}
        ORDER BY 
            REVIEW_ID DESC
    </select>

    <select id="likeSelectRow" 
            parameterType="map" 
            resultType="Integer">
        SELECT COUNT(*)
        FROM DAYCARE_LIKE
        WHERE DAYCARE_ID = #{daycareId} AND UID = #{uid}
    </select>

    <select id="likeDaycareSelectRow" 
            parameterType="Integer" 
            resultType="likeResponseDTO">
        SELECT 
            DAYCARE_ID as daycareId,
            UID as uid
        FROM DAYCARE_LIKE
        WHERE UID = #{uid}
    </select>

    <insert id="likeInsertRow"
            parameterType ="map">
        insert into DAYCARE_LIKE(DAYCARE_ID, UID)
        values(#{daycareId}, #{uid})
    </insert>

    <delete id="likeDeleteRow"
            parameterType ="map">
        DELETE FROM DAYCARE_LIKE
        WHERE UID = #{uid} AND DAYCARE_ID = #{daycareId};
    </delete>

    <insert id="postInsertRow"
            parameterType ="postRequestDTO">
        insert into POST(UID, TITLE, CONTENT, DATE)
        values(#{uid}, #{title}, #{content}, #{date})
    </insert>

    <delete id="postDeleteRow"
            parameterType ="Integer">
        DELETE FROM POST
        WHERE POST_ID = #{postId}
    </delete>

    <select id="postSelectRow" 
            resultType="postResponseDTO">
        SELECT 
            POST_ID as postId,
            UID as uid,
            TITLE as title,
            CONTENT as content,
            DATE as date
        FROM POST
    </select>

    <select id="commentSelectRow" 
            parameterType ="Integer"
            resultType="commentResponseDTO">
        SELECT 
            COMMENT_ID as commentId,
            POST_ID as postId,
            UID as uid,
            CONTENT as content,
            DATE as date
        FROM COMMENT
        WHERE POST_ID = #{postId}
        ORDER BY 
            POST_ID DESC
    </select>

    <insert id="commentInsertRow"
            parameterType ="commentRequestDTO">
        insert into COMMENT(POST_ID, CONTENT, UID, DATE)
        values(#{postId}, #{content}, #{uid}, #{date})
    </insert>

    <update id="postUpdateRow"
            parameterType ="postRequestDTO">
        UPDATE POST
        SET TITLE = #{title}, CONTENT = #{content}
        WHERE POST_ID = #{postId};
    </update>

</mapper>